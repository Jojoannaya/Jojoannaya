use mavenfuzzyfactory;
-- step 1: find the website pageviews for relevant sessions
Create temporary table first_pageviews
select website_session_id, min(website_pageview_id) as min_pageview_id
from website_pageviews
where created_at < '2012-06-14'
group by 1;

-- find the landing_page with urls
Create temporary table sessions_w_home_landing_page
select first_pageviews.website_session_id, website_pageviews.pageview_url as landing_page
from first_pageviews
left join website_pageviews 
on first_pageviews.min_pageview_id = website_pageviews.website_pageview_id
where website_pageviews.pageview_url = '/home';

-- only select the sessions that is bounce
create temporary table bounced_sessions
select 
sessions_w_home_landing_page.website_session_id, 
sessions_w_home_landing_page.landing_page, 
count(distinct website_pageviews.website_pageview_id) as count_of_pages_viewed
from sessions_w_home_landing_page
left join website_pageviews
on sessions_w_home_landing_page.website_session_id = website_pageviews.website_session_id
group by 
sessions_w_home_landing_page.website_session_id,
sessions_w_home_landing_page.landing_page
having  count_of_pages_viewed= 1;

-- bring back the complete sessions that before 2012-06-14 and the landing page is home
select 
count(distinct sessions_w_home_landing_page.website_session_id) as sessions,
count(distinct bounced_sessions.website_session_id) as bounced_sessions,
count(distinct bounced_sessions.website_session_id) / count(distinct sessions_w_home_landing_page.website_session_id) as bounce_rate
from sessions_w_home_landing_page
left join bounced_sessions
on sessions_w_home_landing_page.website_session_id = bounced_sessions.website_session_id
